#!/usr/bin/env ruby

$:.unshift File.expand_path(File.join(File.dirname(__FILE__), 'lib'))

require 'optparse'
require 'nropster'
require 'logger'

VERSION_S = 'nropster 1.0: Download shows from TiVo and encode to DV'

Logger.new(File.expand_path(File.join(File.dirname(__FILE__), 'work', 'log')))

def parse_options
  options = {}
  optparse = OptionParser.new do |opts|
    opts.banner = "Usage nropster [options]"
    options[:download_now_playing] = true
    opts.on('-d', '--[no-]download-now-playing',
            "(default) Download Now Playing list from TiVo and save for when --no-download-now-playing options is used") do
      options[:download_now_playing] = false
    end
    options[:show_now_playing_kept] = false
    opts.on('-s', '--show-now-playing-kept', 'Show Now Playing (Kept) list and exit') do
      options[:show_now_playing_kept] = true
    end
    opts.on('-v', '--version', 'Show version') do
      log VERSION_S
      exit 1
    end
  end
  
  begin
    optparse.parse!
  rescue OptionParser::InvalidOption => ex
    log ex.message
    puts optparse
    exit 1
  end
  log "Options: download-now-playing = #{options[:download_now_playing]}, show-now-playing-kept = #{options[:show_now_playing_kept]}", false
  options
end

log "\n", false
log "Program started", false

options = parse_options

nropster = Nropster.new(options[:download_now_playing])

if options[:show_now_playing_kept]
  nropster.show_now_playing_kept
else
  nropster.run
end

